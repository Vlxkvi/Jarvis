const {SlashCommandBuilder,EmbedBuilder} = require("discord.js");
const fs = require('fs'); 
const path = require('path');
require("dotenv/config");

module.exports = {
	async execute(interaction) {
		try {
		
			const loadingEmbed = new EmbedBuilder()
			.setColor(0x9caef2)
			.setDescription('Assigning roles, it\'ll take few seconds')
			.setTimestamp()
			.setFooter({ text: 'Jarùïßis' });
	
		  	await interaction.reply({ embeds: [loadingEmbed], fetchReply: true });
			
			//–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø–∞–ø–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—ë —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–≤–∞–Ω–∏—è
			const folderPath = path.join(__dirname, '../1Storage');
			if (!fs.existsSync(folderPath)) return interaction.reply({
				content: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ñ–∞–π–ª–∞',
				ephemeral: true}
			);

			//–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ñ–∞–π–ª–∞
			const filePath = path.join(folderPath, 'Names.json');

			//–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞
			if (!fs.existsSync(filePath)) return interaction.reply({content: '–§–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'});

			//–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
			const data = fs.readFileSync(filePath, 'utf-8');

			//–ï—Å–ª–∏ —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π
			if (data.length < 5) return interaction.reply({
				content: '–°–ø–∏—Å–∫–∏ –∏–≤–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç—ã',
				ephemeral: true
			});

			//–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–±—ä–µ–∫—Ç
			const json = JSON.parse(data);


			//–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ —Å—Ç—Ä–æ–∫—É
			function list() {
				var num = 1;
				var str = '';
				for (let key in json) {
					if (!json.hasOwnProperty(key)) break;
					const Obj = json[key];
					str += `${num++}. <@${key}> - ${Obj.social}\n\n`;
				}
				return str
			}

			const embed = new EmbedBuilder()
				.setColor(0x9caef2)
				.setTitle('–°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –∏–≤–µ–Ω—Ç')
				.setDescription(list())
				.setFooter({
					text: `–ó–∞–ø—Ä–æ—Å–∏–ª ${interaction.member.displayName}`,
					iconURL: interaction.member.displayAvatarURL()
				})
				.setTimestamp();

			await interaction.editReply({embeds: [embed], ephemeral: false})

		} catch (error) {
			console.log(error);
			await interaction.editReply(`<@163547278882111488>\n${error.message}`);
		}
	}
}
